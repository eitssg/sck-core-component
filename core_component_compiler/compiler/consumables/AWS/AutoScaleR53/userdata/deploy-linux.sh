MIME-Version: 1.0
Content-Type: multipart/mixed; boundary=BlockBoundaryString12345AbCdE

--BlockBoundaryString12345AbCdE
Content-Type: text/cloud-config

repo_update: false
repo_upgrade: none
bootcmd:
    {% if 'NameServers' in context %}
    - 'echo "# DNS resolver configuration" > /etc/resolv.conf'
    - 'echo -e "# Generated by the pipeline\n" >> /etc/resolv.conf'
    {% for nameserver in context.NameServers %}
    - 'echo "nameserver {{ nameserver }}" >> /etc/resolv.conf'
    {% endfor %}
    {% endif %}
    - 'echo "options timeout:2 attempts:3" >> /etc/resolv.conf'
    - 'uptime'
    - 'exit 0'

--BlockBoundaryString12345AbCdE
Content-Type: text/x-shellscript

#!/bin/bash
set -ex

# log everything here to user-data
exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1

signal () {
    EXIT_CODE=$?
    [ $EXIT_CODE -eq 0 ] || echo "=== End Userdata - FAILED ==="
    /opt/aws/bin/cfn-signal --region ${AWS::Region} --stack ${AWS::StackName} --resource {{ resource_to_signal }} --exit-code $EXIT_CODE
}
trap signal EXIT

echo "=== Begin Userdata ==="

# Source the profile scripts for this session
source /etc/profile.d/proxy.sh
source /etc/profile.d/deployment_information.sh

# Print environment variables for debugging
env

# Per-distro tweaks before running cfn-init.
{% include "AWS/_shared/userdata/distro.sh" %}

echo "Executing cfn-init"
tail -F /var/log/cfn-init.log --pid $$ -q &
/opt/aws/bin/cfn-init --region ${AWS::Region} --stack ${AWS::StackName} --resource {{ resource_to_signal }}LaunchConfiguration --configsets default

echo "=== End Userdata - SUCCESS ==="
