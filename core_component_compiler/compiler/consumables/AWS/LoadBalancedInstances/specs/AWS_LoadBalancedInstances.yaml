AWS::LoadBalancedInstances:
  _Type: Component

  Configuration:
    LoadBalancer:
      Pipeline::Security:
        _Type: Pipeline::IpSecurity
        _Required: false
      Properties:
        AccessLoggingPolicy:
          _Required: false
          _Type: Resource::AWS::ElasticLoadBalancing::LoadBalancer::AccessLoggingPolicy
        AppCookieStickinessPolicy:
          _Type: list
          _Required: false
          _ListItemSpec:
            CookieName:
              _Type: string
            PolicyName:
              _Type: string
        ConnectionDrainingPolicy:
          _Required: false
          Enabled:
            _Type: boolean
          Timeout:
            _Type: int
            _Required: false
        ConnectionSettings:
          _Required: false
          IdleTimeout:
            _Type: int
            _IntMinValue: 1
            _IntMaxValue: 4000
        HealthCheck:
          HealthyThreshold:
            _Type: int
            _Required: false
            _IntMinValue: 2
            _IntMaxValue: 10
          Interval:
            _Type: int
            _Required: false
            _IntMinValue: 5
            _IntMaxValue: 300
          Target:
            _Type: string
            _StringRegex: "((TCP|SSL):[0-9]{1,5})|((HTTP|HTTPS):[0-9]{1,5}/.*)"
          Timeout:
            _Type: int
            _Required: false
            _IntMinValue: 2
            _IntMaxValue: 60
          UnhealthyThreshold:
            _Type: int
            _Required: false
            _IntMinValue: 2
            _IntMaxValue: 10
        LBCookieStickinessPolicy:
          _Type: list
          _Required: false
          _ListItemSpec:
            CookieExpirationPeriod:
              _Type: int
              _Required: false
            PolicyName:
              _Type: string
        Listeners:
          _Type: list
          _ListLength: 1-10
          _ListItemSpec:
            InstancePort:
              _Type: int
            InstanceProtocol:
              _Type: string
              _StringEnum: [ HTTP, HTTPS, TCP, SSL ]
              _Required: false
            LoadBalancerPort:
              _Type: int
            PolicyNames:
              _Type: list
              _Required: false
              _ListItemType: string
            Protocol:
              _Type: string
              _StringEnum: [ HTTP, HTTPS, TCP, SSL ]
            SSLCertificateId:
              _Type: string
              _Configurable:
                Spec::Property: [ Protocol, HTTPS ]
              _Required:
                Spec::Property: [ Protocol, HTTPS ]
              _StringRegex: 'arn:aws:acm:.*'
        Policies:
          _Type: list
          _Required: false
          _ListLength: 0+
          _ListItemSpec:
            Attributes:
              _Type: list
              _ListLength: 0+
              _ListItemSpec:
                Name:
                  _Type: string
                Value:
                  _Type: string
            InstancePorts:
              _Type: list
              _Required: false
              _ListItemType: int
            LoadBalancerPorts:
              _Type: list
              _Required: false
              _ListItemType: int
            PolicyName:
              _Type: string
            PolicyType:
              _Type: string
        Scheme:
          _Type: string
          _StringEnum: [ internal, internet-facing ]

    Instance:
      _KeyCardinality: 1-10
      _KeyRegex: ".*Instance"
      _Type: Resource::AWS::EC2::Instance

    Alarm:
      _KeyRegex: ".*Alarm"
      _KeyCardinality: 0-20
      _Type: Resource::AWS::CloudWatch::Alarm

    LogGroup:
      _Required: false
      _Type: Resource::AWS::Logs::LogGroup

    LogGroupMetricFilter:
      _KeyRegex: ".*LogGroupMetricFilter"
      _KeyCardinality: 0-20
      _Type: Resource::AWS::Logs::MetricFilter
