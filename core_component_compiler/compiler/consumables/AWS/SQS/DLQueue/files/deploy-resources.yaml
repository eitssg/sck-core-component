AWSTemplateFormatVersion: "2010-09-09"
Description: AWS::SQS::DLQueue - {{ component_name }} - resources

Parameters:
  KmsKeyArn:
    Type: String
    Default: ""

  SecurityStackName:
    Type: String

Conditions:
  KmsKeyExists: { "Fn::Not": [ "Fn::Equals": [ Ref: KmsKeyArn, "" ] ] }

Resources:
  # SQS Queue
  {% set resource = app[component_name].Configuration.Queue %}
  Queue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: {{ resource.Properties.DelaySeconds | d(0) }}
      KmsMasterKeyId:
        Fn::If:
          - KmsKeyExists
          - Ref: KmsKeyArn
          - Ref: "AWS::NoValue"
      {% if 'KmsDataKeyReusePeriodSeconds' in resource.Properties %}
      KmsDataKeyReusePeriodSeconds:
        Fn::If:
          - KmsKeyExists
          - {{ resource.Properties.KmsDataKeyReusePeriodSeconds }}
          - Ref: "AWS::NoValue"
      {% endif %}
      MaximumMessageSize: {{ resource.Properties.MaximumMessageSize | d(262144) }}
      MessageRetentionPeriod: {{ resource.Properties.MessageRetentionPeriod | d(345600) }}
      {% if 'FifoQueue' in resource.Properties and resource.Properties.FifoQueue == True %}
      FifoQueue: {{ resource.Properties.FifoQueue}}
      {% if 'ContentBasedDeduplication' in resource.Properties %}
      ContentBasedDeduplication: {{ resource.Properties.ContentBasedDeduplication }}
      {% endif %}
      {% if ('Queue_postfix' in resource.Properties) and ('Queue_prefix' not in resource.Properties) %}
      QueueName: "{{ context.Portfolio }}-{{ context.App }}-{{ context.BranchShortName }}-{{ context.Build }}-{{ resource.Properties.Queue_postfix }}.fifo"
      {% elif ('Queue_postfix' not in resource.Properties) and ('Queue_prefix' in resource.Properties) %}
      QueueName: "{{ resource.Properties.Queue_prefix }}-{{ context.App }}-{{ context.BranchShortName }}-{{ context.Build }}.fifo"
      {% elif ('Queue_postfix' in resource.Properties) and ('Queue_prefix' in resource.Properties) %}
      QueueName: "{{ resource.Properties.Queue_prefix }}-{{ context.App }}-{{ context.BranchShortName }}-{{ context.Build }}-{{ resource.Properties.Queue_postfix }}.fifo"
      {% else %}
      QueueName: "{{ context.Portfolio }}-{{ context.App }}-{{ context.BranchShortName }}-{{ context.Build }}-{{ component_name }}.fifo"
      {% endif %}
      {% else %}
      {% if ('Queue_postfix' in resource.Properties) and ('Queue_prefix' not in resource.Properties) %}
      QueueName: "{{ context.Portfolio }}-{{ context.App }}-{{ context.BranchShortName }}-{{ context.Build }}-{{ resource.Properties.Queue_postfix }}"
      {% elif ('Queue_postfix' not in resource.Properties) and ('Queue_prefix' in resource.Properties) %}
      QueueName: "{{ resource.Properties.Queue_prefix }}-{{ context.App }}-{{ context.BranchShortName }}-{{ context.Build }}"
      {% elif ('Queue_postfix' in resource.Properties) and ('Queue_prefix' in resource.Properties) %}
      QueueName: "{{ resource.Properties.Queue_prefix }}-{{ context.App }}-{{ context.BranchShortName }}-{{ context.Build }}-{{ resource.Properties.Queue_postfix }}"
      {% else %}
      QueueName: "{{ context.Portfolio }}-{{ context.App }}-{{ context.BranchShortName }}-{{ context.Build }}-{{ component_name }}"
      {% endif %}
      {% endif %}
      ReceiveMessageWaitTimeSeconds: {{ resource.Properties.ReceiveMessageWaitTimeSeconds | d(0) }}
      VisibilityTimeout: {{ resource.Properties.VisibilityTimeout | d(30) }}
      {% if 'deadLetterTargetArn' in resource.Properties %}
      RedrivePolicy:
        deadLetterTargetArn: {{ resource.Properties.deadLetterTargetArn }}
        maxReceiveCount: {{ resource.Properties.maxReceiveCount | d(5) }}
      {% endif %}
      {% if 'QueuePolicy' in resource.Properties and  'AllowSNS' in resource.Properties['QueuePolicy'] and resource.Properties['QueuePolicy']['AllowSNS'] == True%}
  QueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref Queue
      PolicyDocument:
        Statement:
          - Action:
            - sqs:SendMessage
            - sqs:ReceiveMessage
            Effect: Allow
            Resource: '*'
            Principal:
              Service: sns.amazonaws.com
      {% endif %}

Outputs:
  QueueArn:
    Value:
      Fn::GetAtt: [ Queue, Arn ]
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:QueueArn"

  QueueName:
    Value:
      Fn::GetAtt: [ Queue, QueueName ]
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:QueueName"

  QueueUrl:
    Value:
      Ref: Queue
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:QueueUrl"
