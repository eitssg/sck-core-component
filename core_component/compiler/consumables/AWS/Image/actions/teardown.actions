{% import "AWS/_shared/vars/names.j2" as names with context %}
{% set status_details = { "Scope": "component", "Consumable": app[component_name].Type, "Environment": context.Environment } %}
{% include "AWS/_shared/actions/addons/teardown-log-groups.actions" %}

- Type: System::NoOp
  Label: "{{ context.ComponentPrn }}:action/teardown/start"
  DependsOn: []
  LifecycleHooks:
    - Type: status
      States: [ Complete ]
      Parameters:
        OnComplete:
          Status: TEARDOWN_IN_PROGRESS
          Message: "Component teardown started"
        Identity: "{{ context.ComponentPrn }}"
        Details:
          {{ status_details | to_yaml | indent(10) }}

- Type: System::NoOp
  Label: "{{ context.ComponentPrn }}:action/teardown/main"
  DependsOn:
    - "{{ context.ComponentPrn }}:action/teardown/gather-facts/pointers"

# Delete the security rules
- Type: AWS::DeleteStack
  Label: "{{ context.ComponentPrn }}:action/teardown/main/security-rules"
  DependsOn:
    - "{{ context.ComponentPrn }}:action/teardown/main"
  Spec:
    Account: "{{ context.AwsAccountId }}"
    Region: "{{ context.AwsRegion }}"
    StackName: "{{ names.security_rules_stack_name }}"
  LifecycleHooks:
    - Type: status
      States: [ Running, Complete, Failed ]
      Parameters:
        OnRunning:
          Status: TEARDOWN_IN_PROGRESS
          Message: Deleting security rules
        OnComplete:
          Status: TEARDOWN_IN_PROGRESS
          Message: Deleted security rules
        OnFailed:
          Status: TEARDOWN_FAILED
          Message: Failed to delete security rules
        Identity: "{{ context.ComponentPrn }}"
        Details:
          {{ status_details | to_yaml | indent(10) }}

- Type: AWS::DeleteImage
  Label: "{{ context.ComponentPrn }}:action/teardown/main/resources"
  DependsOn:
    - "{{ context.ComponentPrn }}:action/teardown/main/security-rules"
  Spec:
    Account: "{{ context.AwsAccountId }}"
    Region: "{{ context.AwsRegion }}"
    ImageName: "{{ names.image_name }}-encrypted"
  LifecycleHooks:
    - Type: status
      States: [ Running, Complete, Failed ]
      Parameters:
        OnRunning:
          Status: TEARDOWN_IN_PROGRESS
          Message: Deleting SOE Image
        OnComplete:
          Status: TEARDOWN_IN_PROGRESS
          Message: Successfully deleted SOE Image
        OnFailed:
          Status: TEARDOWN_FAILED
          Message: Failed to delete SOE Image
        Identity: "{{ context.ComponentPrn }}"
        Details:
          {{ status_details | to_yaml | indent(10) }}

# (log groups) Delete log groups stack
- Type: AWS::DeleteStack
  Label: "{{ context.ComponentPrn }}:action/teardown/main/log-groups"
  DependsOn:
    - "{{ context.ComponentPrn }}:action/teardown/start"
    - "{{ context.ComponentPrn }}:action/teardown/main/resources"
  Spec:
    Account: "{{ context.AwsAccountId }}"
    Region: "{{ context.AwsRegion }}"
    StackName: "{{ names.log_groups_stack_name }}"
  LifecycleHooks:
    - Type: status
      States: [ Running, Complete, Failed ]
      Parameters:
        OnRunning:
          Status: TEARDOWN_IN_PROGRESS
          Message: Deleting log groups
        OnComplete:
          Status: TEARDOWN_IN_PROGRESS
          Message: Deleted log groups
        OnFailed:
          Status: TEARDOWN_FAILED
          Message: Failed to delete log groups
        Identity: "{{ context.ComponentPrn }}"
        Details:
          {{ status_details | to_yaml | indent(10) }}

# Delete the security items
- Type: AWS::DeleteStack
  Label: "{{ context.ComponentPrn }}:action/teardown/main/security-items"
  DependsOn:
    - "{{ context.ComponentPrn }}:action/teardown/main/log-groups"
  Spec:
    Account: "{{ context.AwsAccountId }}"
    Region: "{{ context.AwsRegion }}"
    StackName: "{{ names.security_items_stack_name }}"
    SuccessStatuses: [ CREATE_COMPLETE, UPDATE_COMPLETE ]
  LifecycleHooks:
    - Type: status
      States: [ Running, Complete, Failed ]
      Parameters:
        OnRunning:
          Status: TEARDOWN_IN_PROGRESS
          Message: Deleting security items
        OnComplete:
          Status: TEARDOWN_IN_PROGRESS
          Message: Deleted security items
        OnFailed:
          Status: TEARDOWN_FAILED
          Message: Failed to delete security items
        Identity: "{{ context.ComponentPrn }}"
        Details:
          {{ status_details | to_yaml | indent(10) }}

- Type: System::NoOp
  Label: "{{ context.ComponentPrn }}:action/teardown/success"
  DependsOn:
    - "{{ context.ComponentPrn }}:action/teardown/main/security-items"
  LifecycleHooks:
    - Type: status
      States: [ Complete ]
      Parameters:
        OnComplete:
          Status: TEARDOWN_COMPLETE
          Message: "Component teardown successful"
        Identity: "{{ context.ComponentPrn }}"
        Details:
          {{ status_details | to_yaml | indent(10) }}
