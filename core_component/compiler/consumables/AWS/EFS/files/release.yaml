{% import "AWS/_shared/vars/names.j2" as names with context %}

AWSTemplateFormatVersion: "2010-09-09"
Description: AWS::EFS - {{ component_name }} - release

Conditions:

  Never: !Equals [ "1", "2" ]

Resources:

  NoResources:
    Condition: Never
    Type: AWS::CloudFormation::WaitConditionHandle

  # TODO Adapt for IpAddress when it's available.
  # {% for i in range(1, context.AzCount+1) %}
  # MountTarget{{ i }}IdReleaseDnsRecord:
  #   Type: AWS::Route53::RecordSet
  #   Properties:
  #     HostedZoneId:
  #       Fn::ImportValue: {{ context.ResourceNamespace | d('core-network') }}:HostedZoneId
  #     Name: !Sub
  #         - "${MountTargetId}.{{ names.release_dns_prefix }}.${RegionalHostedZoneName}"
  #         - RegionalHostedZoneName:
  #             Fn::ImportValue: "{{ context.ResourceNamespace | d('core-network') }}:RegionalHostedZoneName"
  #           MountTargetId:
  #             Fn::ImportValue: !Sub "{{ names.resources_stack_name }}:MountTarget{{ i }}Id"
  #     ResourceRecords:
  #       - Fn::ImportValue: !Sub "{{ names.pointers_stack_name }}:MountTarget{{ i }}IdDeploymentDns"
  #     Type: CNAME
  #     TTL: "60"

  # {% endfor %}

Outputs:

  Build:
    Value: "{{ context.Build }}"

  BaseStackName:
    Value:
      Fn::ImportValue: "{{ names.pointers_stack_name }}:BaseStackName"

  PointersStackName:
    Value: "{{ names.pointers_stack_name }}"

  ResourcesStackName:
    Value:
      Fn::ImportValue: "{{ names.pointers_stack_name }}:ResourcesStackName"

  # {% for i in range(1, context.AzCount+1) %}
  # MountTarget{{ i }}IdReleaseDns:
  #   Value: !Ref MountTarget{{ i }}IdReleaseDnsRecord

  # {% endfor %}
