---
{% import "AWS/_shared/vars/names.j2" as names with context %}
{% set resource = app[component_name].Configuration.DbCluster %}

{% set Build = context.Build %}
{% if 'PersistUpdateVersion' in app[component_name] %}
{% set Build = app[component_name].PersistUpdateVersion %}
{% endif %}

AWSTemplateFormatVersion: "2010-09-09"
Description: AWS::RDS::Aurora - {{ component_name }} - pointers

Parameters:
  BaseStackName:
    Type: String

  ResourcesStackName:
    Type: String

Resources:

  DbClusterDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Fn::ImportValue: {{ context.ResourceNamespace | d('core-network') }}:HostedZoneId
      Name:
        Fn::Sub:
          - "{{ names.deployment_dns_prefix }}.${RegionalHostedZoneName}"
          - RegionalHostedZoneName:
              Fn::ImportValue: {{ context.ResourceNamespace | d('core-network') }}:RegionalHostedZoneName
      ResourceRecords:
        - Fn::ImportValue:
            Fn::Sub: "${ResourcesStackName}:DbClusterEndpoint"
      Type: CNAME
      TTL: 60

  {% if resource.Properties.EngineMode != 'serverless' %}
  DbReaderDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Fn::ImportValue: {{ context.ResourceNamespace | d('core-network') }}:HostedZoneId
      Name:
        Fn::Sub:
          - "ro.{{ names.deployment_dns_prefix }}.${RegionalHostedZoneName}"  # Dash RO = readonly, as per aurora's dns pattern.
          - RegionalHostedZoneName:
              Fn::ImportValue: {{ context.ResourceNamespace | d('core-network') }}:RegionalHostedZoneName
      ResourceRecords:
        - Fn::ImportValue:
            Fn::Sub: "${ResourcesStackName}:DbReaderEndpoint"
      Type: CNAME
      TTL: 60
  {% endif %}

Outputs:

  # Pipeline outputs

  Build:
    Value: "{{ Build }}"
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:Build"

  BaseStackName:
    Value:
      Ref: BaseStackName
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:BaseStackName"

  PointersStackName:
    Value:
      Ref: "AWS::StackName"
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:PointersStackName"

  ResourcesStackName:
    Value:
      Ref: ResourcesStackName
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:ResourcesStackName"

  # DB outputs

  DbClusterId:
    Value:
      Fn::ImportValue:
        Fn::Sub: "${ResourcesStackName}:DbClusterId"
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:DbClusterId"

  DbClusterPort:
    Value:
      Fn::ImportValue:
        Fn::Sub: "${ResourcesStackName}:DbClusterPort"
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:DbClusterPort"

  DeploymentDns:
    Value:
      Ref: DbClusterDnsRecord
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:DeploymentDns"

  {% if resource.Properties.EngineMode != 'serverless' %}
  DeploymentReaderDns:
    Value:
      Ref: DbReaderDnsRecord
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:DeploymentReaderDns"
  {% endif %}
