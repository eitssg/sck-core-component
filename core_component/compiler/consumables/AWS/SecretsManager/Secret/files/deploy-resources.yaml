{% import "AWS/_shared/vars/names.j2" as names with context %}
AWSTemplateFormatVersion: "2010-09-09"
Description: AWS::SecretsManager::Secret - {{ component_name }} - resources

Parameters:
  KmsKeyArn:
    Type: String
    Default: ""
  SecurityStackName:
    Type: String

Resources:

  {% set resource = app[component_name].Configuration.Secret %}
  Secret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: "{{ names.base_build_name_hyphenated }}"
      Description: "{{ resource.Description | d(names.base_build_name_hyphenated) }}"
      KmsKeyId: !Ref KmsKeyArn
      GenerateSecretString:
        # Each secret might have specific requirements, so we must allow overrides?
        # TODO What about a default SecretStringTemplate, i.e: "{\"username\": \"foo\"}"
        {% if 'ExcludeCharacters' in resource.Properties.GenerateSecretString %}
        ExcludeCharacters: {{ resource.Properties.GenerateSecretString.ExcludeCharacters }}
        {% endif %}
        ExcludeLowercase: {{ resource.Properties.GenerateSecretString.ExcludeLowercase | d(false) }}
        ExcludeNumbers: {{ resource.Properties.GenerateSecretString.ExcludeNumbers | d(false) }}
        ExcludePunctuation: {{ resource.Properties.GenerateSecretString.ExcludePunctuation | d(true) }}
        ExcludeUppercase: {{ resource.Properties.GenerateSecretString.ExcludeUppercase | d(false) }}
        GenerateStringKey: {{ resource.Properties.GenerateSecretString.GenerateStringKey | d('password') }}
        IncludeSpace: {{ resource.Properties.GenerateSecretString.IncludeSpace | d(false) }}
        PasswordLength: {{ resource.Properties.GenerateSecretString.PasswordLength | d(context.SecretsManager.PasswordLength) }}
        SecretStringTemplate: {{ resource.Properties.GenerateSecretString.SecretStringTemplate }}

Outputs:

  SecretArn:
    Value: !Ref Secret
    Export:
      Name: !Sub "${AWS::StackName}:SecretArn"

