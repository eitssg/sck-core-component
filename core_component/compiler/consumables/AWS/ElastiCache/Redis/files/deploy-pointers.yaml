{% import "AWS/_shared/vars/names.j2" as names with context %}
{% set Build = context.Build %}
{% if 'PersistUpdateVersion' in app[component_name] %}
{% set Build = app[component_name].PersistUpdateVersion %}
{% endif %}

AWSTemplateFormatVersion: "2010-09-09"
Description: AWS::ElastiCache::Redis - {{ component_name }} - pointers

Parameters:
  BaseStackName:
    Type: String

  ResourcesStackName:
    Type: String

Resources:
  {% set resource = app[component_name].Configuration.ReplicationGroup %}
  # Replication group DNS record
  DeploymentDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Fn::ImportValue: {{ context.ResourceNamespace | d('core-network') }}:HostedZoneId
      Name:
        Fn::Sub:
          - "{{ names.deployment_dns_prefix }}.${RegionalHostedZoneName}"
          - RegionalHostedZoneName:
              Fn::ImportValue: {{ context.ResourceNamespace | d('core-network') }}:RegionalHostedZoneName
      ResourceRecords:
        - Fn::ImportValue:
            Fn::Sub: "${ResourcesStackName}:EndpointAddress"
      Type: CNAME
      TTL: 60

  {% if resource.Properties.NumNodeGroups == 1 %}
  ReaderDnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId:
        Fn::ImportValue: {{ context.ResourceNamespace | d('core-network') }}:HostedZoneId
      Name:
        Fn::Sub:
          - "reader-{{ names.deployment_dns_prefix }}.${RegionalHostedZoneName}"
          - RegionalHostedZoneName:
              Fn::ImportValue: {{ context.ResourceNamespace | d('core-network') }}:RegionalHostedZoneName
      ResourceRecords:
        - Fn::ImportValue:
            Fn::Sub: "${ResourcesStackName}:ReaderEndpointAddress"
      Type: CNAME
      TTL: 60
  {% endif %}

Outputs:
  Build:
    Value: "{{ Build }}"
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:Build"

  ReplicationGroupId:
    Value:
      Fn::ImportValue:
        Fn::Sub: "${ResourcesStackName}:ReplicationGroupId"
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:ReplicationGroupId"

  DeploymentDns:
    Value:
      Ref: DeploymentDnsRecord
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:DeploymentDns"

  {% if resource.Properties.NumNodeGroups == 1 %}
  ReaderDeploymentDns:
    Value:
      Ref: ReaderDnsRecord
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:ReaderDeploymentDns"
  {% endif %}

  Port:
    Value:
      Fn::ImportValue:
        Fn::Sub: "${ResourcesStackName}:Port"
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:Port"

  BaseStackName:
    Value:
      Ref: BaseStackName
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:BaseStackName"

  PointersStackName:
    Value:
      Ref: "AWS::StackName"
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:PointersStackName"

  ResourcesStackName:
    Value:
      Ref: ResourcesStackName
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}:ResourcesStackName"
